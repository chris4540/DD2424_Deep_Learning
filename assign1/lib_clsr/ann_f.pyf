!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module ann_f ! in 
    interface  ! in :ann_f
        module ann_for ! in :ann_f:ann_f.f90
            function softmax(x,axis) result (ret) ! in :ann_f:ann_f.f90:ann_for
                real(kind=8) dimension(:,:),intent(in) :: x
                integer(kind=4), optional,intent(in) :: axis
                real(kind=8) dimension(size(x,1),size(x,2)) :: ret
            end function softmax
            function evaluate_classifier(x_mat,w_mat,b_vec) result (ret) ! in :ann_f:ann_f.f90:ann_for
                real(kind=8) dimension(:,:),intent(in) :: x_mat
                real(kind=8) dimension(:,:),intent(in) :: w_mat
                real(kind=8) dimension(:,:),intent(in) :: b_vec
                real(kind=8) dimension(size(w_mat,1),size(x_mat,2)) :: ret
            end function evaluate_classifier
            function compute_cost(x_mat,y_mat,w_mat,b_vec,lambda_) result (ret) ! in :ann_f:ann_f.f90:ann_for
                real(kind=8) dimension(:,:),intent(in) :: x_mat
                real(kind=8) dimension(:,:),intent(in) :: y_mat
                real(kind=8) dimension(:,:),intent(in) :: w_mat
                real(kind=8) dimension(:,:),intent(in) :: b_vec
                real(kind=8) intent(in) :: lambda_
                real(kind=8) :: ret
            end function compute_cost
            subroutine compute_gradients(x_mat,y_mat,w_mat,b_vec,lambda_,grad_w,grad_b) ! in :ann_f:ann_f.f90:ann_for
                real(kind=8) dimension(:,:),intent(in) :: x_mat
                real(kind=8) dimension(:,:),intent(in) :: y_mat
                real(kind=8) dimension(:,:),intent(in) :: w_mat
                real(kind=8) dimension(:,:),intent(in) :: b_vec
                real(kind=8) intent(in) :: lambda_
                real(kind=8) dimension(size(w_mat,1),size(w_mat,2)),intent(out),depend(w_mat,w_mat) :: grad_w
                real(kind=8) dimension(size(b_vec,1),size(b_vec,2)),intent(out),depend(b_vec,b_vec) :: grad_b
            end subroutine compute_gradients
        end module ann_for
    end interface 
end python module ann_f

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
